{"version":3,"sources":["store/reducers/getDataReducer.js","store/reducers/getDataCoinReducer.js","store/reducers/index.js","routes/history.js","store/index.js","components/Loader.js","store/actions/index.js","components/CoinList.js","pages/Main.js","pages/Coin.js","routes/index.js","App.js","serviceWorker.js","index.js"],"names":["INITIAL_STATE","coins","error","coinsPage","rootReducer","combineReducers","getData","state","arguments","length","undefined","action","type","getDataCoin","history","createBrowserHistory","middlewares","thunk","routerMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","connectRouter","reducers","applyMiddleware","apply","Loader","props","react_default","a","createElement","className","id","style","border","concat","color","borderTop","title","dispatch","axios","get","then","res","data","catch","coin","CoinList","this","react","map","item","key","Link","to","src","image","small","alt","fontSize","name","components_Loader","Component","connect","bindActionCreators","ActionCreators","Main","components_CoinList","Coin","match","params","toUpperCase","symbol","dangerouslySetInnerHTML","__html","Object","values","description","Routes","isLoading","setState","BrowserRouter","Switch","Route","exact","path","component","App","es","routes","Boolean","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.da48d4ec.chunk.js","sourcesContent":["const INITIAL_STATE = {\r\n    coins: [],\r\n    error: '',\r\n}\r\nexport default function getData(state = INITIAL_STATE, action){\r\n    switch(action.type){\r\n        case 'GET_API_COINS':\r\n            return{\r\n                coins: action.coins\r\n            }\r\n        case 'GET_API_ERROR':\r\n            return{\r\n                error: action.error\r\n            }\r\n\r\n        default: return state\r\n    }\r\n}","const INITIAL_STATE = {\r\n    coinsPage: [],\r\n    error: '',\r\n}\r\nexport default function getData(state = INITIAL_STATE, action){\r\n    switch(action.type){\r\n        case 'GET_API_COINS_PAGE':\r\n            return{\r\n                coinsPage: action.coinsPage\r\n            }\r\n        case 'GET_API_ERROR':\r\n            return{\r\n                error: action.error\r\n            }\r\n\r\n        default: return state\r\n    }\r\n}","import {combineReducers} from 'redux'\r\nimport getData from './getDataReducer'\r\nimport getDataCoin from './getDataCoinReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    getData,\r\n    getDataCoin\r\n})\r\n\r\nexport default rootReducer","import {createBrowserHistory} from 'history'\r\n\r\nconst history = createBrowserHistory()\r\n\r\nexport default history","import {createStore, applyMiddleware, compose} from 'redux'\r\nimport reducers from './reducers'\r\nimport thunk from 'redux-thunk';\r\nimport {connectRouter, routerMiddleware} from 'connected-react-router'\r\n\r\nimport history from '../routes/history'\r\n\r\nconst middlewares = [\r\n    thunk,\r\n    routerMiddleware(history)\r\n]\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nconst store = createStore(connectRouter(history)(reducers), composeEnhancers(\r\n    applyMiddleware(...middlewares)\r\n))\r\n\r\nexport default store","import React from 'react'\r\n\r\nconst Loader = (props) => {\r\n  return(\r\n    <div className=\"load animated fadeIn\">\r\n      <div id=\"loader\" style={{border: `10px solid ${props.color}`, borderTop: '10px solid white'}}></div>\r\n      <p>{props.title}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loader","import axios from 'axios'\r\n\r\nexport const getData = () => {\r\n    return dispatch => {\r\n        axios.get(`https://api.coingecko.com/api/v3/coins`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: 'GET_API_COINS',\r\n                coins: res.data\r\n            })\r\n        })\r\n        .catch(error => {\r\n            dispatch({ type: 'GET_API_ERROR', error })\r\n        })\r\n    }\r\n}\r\n\r\nexport const getDataCoin = (coin) => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: 'GET_API_COINS_PAGE',\r\n            coinsPage: ''\r\n        })\r\n        axios.get(`https://api.coingecko.com/api/v3/coins/${coin}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: 'GET_API_COINS_PAGE',\r\n                coinsPage: res.data\r\n            })\r\n        })\r\n        .catch(error => {\r\n            dispatch({ type: 'GET_API_ERROR', error })\r\n        })\r\n    }\r\n}","import React, {Component, Fragment} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as ActionCreators from '../store/actions'\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport Loader from './Loader'\r\n\r\nclass CoinList extends Component{\r\n    componentWillMount(){\r\n        this.props.getData()\r\n    }\r\n    render(){\r\n        //console.log(this.props)\r\n        return(\r\n            <Fragment>\r\n            {\r\n                this.props.coins.length !== 0 ?\r\n                this.props.coins.map(item => {\r\n                    return(\r\n                        <div key={item.id} className=\"col-md-2 text-center mb-4 animated fadeIn\">\r\n                          <Link to={item.id} className=\"card-crypto d-block\">\r\n                            <img src={item.image.small} alt=\"\"/>\r\n                            <p className=\"font-weight-bold mt-2 mb-0\" style={{fontSize:'12px'}}>{item.name}</p>\r\n                          </Link>\r\n                        </div>\r\n                    )\r\n                }) :\r\n                <div className=\"container\">\r\n                    <Loader color=\"black\" title=\"Carregando...\"/>\r\n                </div>\r\n            }\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    coins: state.getData.coins\r\n})\r\nconst mapDispatchToProps = dispatch => bindActionCreators(ActionCreators, dispatch) \r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CoinList)","import React, { Component } from 'react';\r\nimport CoinList from '../components/CoinList'\r\n\r\nclass Main extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container animated fadeIn\">\r\n        <header className=\"mt-5 mb-5 text-center\">\r\n          <h1>CRYPTODATA</h1>\r\n        </header>\r\n        <div className=\"row\">\r\n          <CoinList />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as ActionCreators from '../store/actions'\r\n\r\nimport Loader from '../components/Loader'\r\n\r\nclass Coin extends Component {\r\n    componentWillMount(){\r\n        const coin = this.props.match.params.id\r\n        this.props.getDataCoin(coin)\r\n    }\r\n    render() {\r\n        //console.log(this.props)\r\n        return (\r\n            <div className=\"container\">\r\n                {\r\n                    typeof this.props.coinsPage.id != 'undefined' ?\r\n                    <div className=\"animated fadeIn mt-5 mb-5\">\r\n                        <h3 className=\"mb-4\">\r\n                            <img alt=\"\" src={this.props.coinsPage.image.small}/>\r\n                            {' '+this.props.coinsPage.id.toUpperCase()+' / '}\r\n                            {this.props.coinsPage.symbol.toUpperCase()}\r\n                        </h3>\r\n                        <div \r\n                            className=\"animated fadeIn\" \r\n                            dangerouslySetInnerHTML={{\r\n                                __html: Object.values(this.props.coinsPage.description)[0]\r\n                            }}\r\n                        />\r\n                        <Link to=\"/\" className=\"btn btn-primary mb-5 mt-4\">Voltar</Link>\r\n                    </div>\r\n                    : <Loader color=\"black\" title=\"Carregando...\"/>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    coinsPage: state.getDataCoin.coinsPage\r\n})\r\nconst mapDispatchToProps = dispatch => bindActionCreators(ActionCreators, dispatch) \r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Coin)","import React, {Component, Fragment} from 'react'\r\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\r\n\r\n//import {ConnectedRouter} from 'connected-react-router'\r\n//import history from './history'\r\n\r\nimport Loader from '../components/Loader'\r\n\r\nimport Main from '../pages/Main'\r\nimport Coin from '../pages/Coin'\r\n\r\nclass Routes extends Component{\r\n    state = {\r\n        isLoading: true\r\n    }\r\n    componentDidMount(){\r\n        this.setState({\r\n            isLoading: false\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <Fragment>\r\n                {\r\n                    this.state.isLoading ? \r\n                    <Loader color=\"black\" title=\"Carregando...\"/>\r\n                    :\r\n                    <BrowserRouter>\r\n                        <Switch>\r\n                            <Route exact path=\"/\" component={Main}/>\r\n                            <Route path='/:id' component={Coin}/>\r\n                        </Switch>\r\n                    </BrowserRouter>\r\n                }\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Routes","import React, { Component } from 'react';\n\nimport {Provider} from 'react-redux'\nimport store from './store/index.js'\n\nimport Routes from './routes/index.js'\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Routes />\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />\n, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}